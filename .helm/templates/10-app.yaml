# app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      imagePullSecrets:
        - name: registrysecret
      containers:
        - name: rpc
          image: {{ .Values.werf.image.rpc }}
          ports:
            - name: http-app
              containerPort: 8080
          env:
            - name: ENVIRONMENT
              value: {{ .Values.global.env | default "dev" }}
            - name: PRIVATE_KEY
              value: {{ .Values.global.private_key }}
            - name: PUBLIC_KEY
              value: {{ .Values.global.public_key }}
            - name: DB_HOST
              value: {{ pluck .Values.global.env .Values.app.db.host | first | default .Values.app.db.host._default }}
            - name: DB_PORT
              value: {{ pluck .Values.global.env .Values.app.db.port | first | default .Values.app.db.port._default | quote }}
            - name: DB_USER
              value: {{ pluck .Values.global.env .Values.app.db.user | first | default .Values.app.db.user._default }}
            - name: DB_PASS
              value: {{ pluck .Values.global.env .Values.app.db.password | first | default .Values.app.db.password._default }}
            - name: DB_NAME
              value: {{ pluck .Values.global.env .Values.app.db.name | first | default .Values.app.db.name._default }}

# Cluster IP
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    app: {{ .Chart.Name }}
  clusterIP: None
  ports:
    - name: http-app
      port: 8080
    - name: http
      port: 80
  type: ClusterIP

# Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "3000m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
  name: {{ .Chart.Name }}
spec:
  rules:
    - host: {{ .Values.global.ci_url }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Chart.Name }}
                port: 
                  name: http-app
            path: /
            pathType: Prefix
#  tls:
#    - hosts:
#        - {{ .Values.global.ci_url }}
#      secretName: ingress-tls

# Pod autoscaling
# ---
# apiVersion: autoscaling.k8s.io/v1
# kind: VerticalPodAutoscaler
# metadata:
#   name: {{ .Chart.Name }}
#   labels:
#     name: {{ .Chart.Name }}
# spec:
#   targetRef:
#     apiVersion: "apps/v1"
#     kind: Deployment
#     name: {{ .Chart.Name }}
#   updatePolicy:
#     updateMode: "Auto"
#   resourcePolicy:
#     containerPolicies:
#       - containerName: backend
#         minAllowed:
#           memory: "512Mi"
#           cpu: "1"
#         maxAllowed:
#           memory: "8Gi"
#           cpu: "8"
#         mode: Auto

# HTTPS certificate manager disabled as we have problems with UE websocket SSL
#---
#apiVersion: certmanager.k8s.io/v1alpha1
#kind: Certificate
#metadata:
#  name: {{ .Chart.Name }}
#spec:
#  acme:
#    config:
#      - domains:
#          - {{ .Values.global.ci_url }}
#        http01:
#          ingressClass: nginx
#  dnsNames:
#    - {{ .Values.global.ci_url }}
#  issuerRef:
#    kind: ClusterIssuer
#    name: letsencrypt
#  secretName: ingress-tls

